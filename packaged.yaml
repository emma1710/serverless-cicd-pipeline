AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: "\nThis template generates a generic 3-environment CI/CD Pipeline for\
  \ Serverless Apps that use SAM (Serverless Application Model).\nCharges may apply\
  \ for AWS Services utilized - Below are a summary for your convenience:\n\n  AWS\
  \ CodeCommit: Manages and Stores your service source code (Git repository)\n  Amazon\
  \ S3: Manages CodeBuild Artifacts as well as Cache for subsequent runs when defined\
  \ in the build spec\n  AWS CodeBuild: Manages and Runs builds specified under buildspec.yaml\n\
  \  AWS CodePipeline: Manages and Runs the Continuous Integration and Continuous\
  \ Deployment pipeline\n  AWS CloudFormation: Manages SAM templates and creates the\
  \ Infrastructure necessary for each environment\n  AWS IAM: Manages Identity and\
  \ Access across Services outlined above\n"
Parameters:
  ProjectName:
    Type: String
    Description: Name of the project which is using this pipeline
Metadata:
  AWS::ServerlessRepo::Application:
    Name: serverless-cicd-pipeline
    Description: This template generates a generic 3-environment CI/CD Pipeline for
      Serverless Apps that use SAM (Serverless Application Model).
    Author: Christian Mueller
    SpdxLicenseId: Apache-2.0
    LicenseUrl: s3://cmr-aws-sam-demo/2944c68f51ac145bc62a72e099baf169
    ReadmeUrl: s3://cmr-aws-sam-demo/5a19d440c922c0d526c1895e2bfed1ce
    Labels:
    - CodeCommit
    - CodeBuild
    - CodeDeploy
    - CodePipeline
    - Python
    HomePageUrl: https://github.com/muellerc/serverless-cicd-pipeline
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/muellerc/serverless-cicd-pipeline
Resources:
  CodeRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName:
        Ref: ProjectName
      RepositoryDescription:
        Fn::Sub: ${ProjectName} service repository
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      Tags:
      - Key: Stack
        Value:
          Ref: AWS::StackName
      - Key: Project
        Value:
          Ref: ProjectName
    DeletionPolicy: Retain
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Ref: ProjectName
      Description:
        Fn::Sub: Build project for the ${ProjectName}
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
        - Name: BUILD_OUTPUT_BUCKET
          Value:
            Ref: BuildArtifactsBucket
      Cache:
        Type: S3
        Location:
          Fn::Sub: ${BuildArtifactsBucket}/codebuild-cache
      ServiceRole:
        Fn::GetAtt:
        - CodeBuildServiceRole
        - Arn
      Source:
        Type: CODEPIPELINE
      Tags:
      - Key: Stack
        Value:
          Ref: AWS::StackName
      - Key: Project
        Value:
          Ref: ProjectName
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: BuildArtifactsBucket
        Type: S3
      Name:
        Ref: ProjectName
      RoleArn:
        Fn::GetAtt:
        - CodePipelineExecutionRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Name: SourceCodeRepo
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: '1'
          Configuration:
            RepositoryName:
              Fn::GetAtt:
              - CodeRepository
              - Name
            BranchName: master
          OutputArtifacts:
          - Name: SourceCodeAsZip
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: CodeBuild
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName:
              Ref: CodeBuildProject
          InputArtifacts:
          - Name: SourceCodeAsZip
          OutputArtifacts:
          - Name: BuildArtifactAsZip
      - Name: Beta
        Actions:
        - Name: CreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            RoleArn:
              Fn::GetAtt:
              - CloudFormationExecutionRole
              - Arn
            StackName:
              Fn::Sub: ${ProjectName}-Beta
            ChangeSetName:
              Fn::Sub: ${ProjectName}-ChangeSet-Beta
            TemplatePath: BuildArtifactAsZip::packaged.yaml
            Capabilities: CAPABILITY_IAM
          InputArtifacts:
          - Name: BuildArtifactAsZip
          RunOrder: 1
        - Name: ExecuteChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            RoleArn:
              Fn::GetAtt:
              - CloudFormationExecutionRole
              - Arn
            StackName:
              Fn::Sub: ${ProjectName}-Beta
            ChangeSetName:
              Fn::Sub: ${ProjectName}-ChangeSet-Beta
          OutputArtifacts:
          - Name:
              Fn::Sub: ${ProjectName}BetaChangeSet
          RunOrder: 2
      - Name: Gamma
        Actions:
        - Name: CreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            RoleArn:
              Fn::GetAtt:
              - CloudFormationExecutionRole
              - Arn
            StackName:
              Fn::Sub: ${ProjectName}-Gamma
            ChangeSetName:
              Fn::Sub: ${ProjectName}-ChangeSet-Gamma
            TemplatePath: BuildArtifactAsZip::packaged.yaml
            Capabilities: CAPABILITY_IAM
          InputArtifacts:
          - Name: BuildArtifactAsZip
          RunOrder: 1
        - Name: ExecuteChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            RoleArn:
              Fn::GetAtt:
              - CloudFormationExecutionRole
              - Arn
            StackName:
              Fn::Sub: ${ProjectName}-Gamma
            ChangeSetName:
              Fn::Sub: ${ProjectName}-ChangeSet-Gamma
          OutputArtifacts:
          - Name:
              Fn::Sub: ${ProjectName}GammaChangeSet
          RunOrder: 2
      - Name: Prod
        Actions:
        - Name: DeploymentApproval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Provider: Manual
            Version: '1'
          RunOrder: 1
        - Name: CreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            RoleArn:
              Fn::GetAtt:
              - CloudFormationExecutionRole
              - Arn
            StackName:
              Fn::Sub: ${ProjectName}-Prod
            ChangeSetName:
              Fn::Sub: ${ProjectName}-ChangeSet-Prod
            TemplatePath: BuildArtifactAsZip::packaged.yaml
            Capabilities: CAPABILITY_IAM
          InputArtifacts:
          - Name: BuildArtifactAsZip
          RunOrder: 2
        - Name: ExecuteChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            RoleArn:
              Fn::GetAtt:
              - CloudFormationExecutionRole
              - Arn
            StackName:
              Fn::Sub: ${ProjectName}-Prod
            ChangeSetName:
              Fn::Sub: ${ProjectName}-ChangeSet-Prod
          OutputArtifacts:
          - Name:
              Fn::Sub: ${ProjectName}ProdChangeSet
          RunOrder: 3
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
      Path: /
      Policies:
      - PolicyName: CodeBuildLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}:*
      - PolicyName: CodeBuildArtifactsBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            Resource:
            - Fn::Sub: arn:aws:s3:::${BuildArtifactsBucket}/*
      - PolicyName: CodeBuildParameterStore
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: ssm:GetParameters
            Resource: '*'
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
      Path: /
      Policies:
      - PolicyName: CodePipelineAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:PassRole
            - lambda:InvokeFunction
            - lambda:ListFunctions
            - lambda:InvokeAsyc
            Resource: '*'
      - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
              Fn::Sub: arn:aws:s3:::${BuildArtifactsBucket}/*
          - Effect: Allow
            Action: codecommit:*
            Resource:
              Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeRepository.Name}
      - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            Resource:
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}
          - Effect: Allow
            Action:
            - cloudformation:CreateStack
            - cloudformation:DescribeStacks
            - cloudformation:DeleteStack
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            Resource:
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}*/*
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
Outputs:
  CodeCommitRepositoryHttpUrl:
    Description: AWS CodeCommit Git repository
    Value:
      Fn::GetAtt:
      - CodeRepository
      - CloneUrlHttp
  CodeCommitRepositorySshUrl:
    Description: AWS CodeCommit Git repository
    Value:
      Fn::GetAtt:
      - CodeRepository
      - CloneUrlSsh
  BuildArtifactS3Bucket:
    Description: Amazon S3 Bucket for Pipeline and Build artifacts
    Value:
      Ref: BuildArtifactsBucket
  CodeBuildProject:
    Description: CodeBuild Project name
    Value:
      Ref: CodeBuildProject
  CodePipeline:
    Description: AWS CodePipeline pipeline name
    Value:
      Ref: Pipeline
  CodeBuildIAMRole:
    Description: CodeBuild IAM Role
    Value:
      Fn::GetAtt:
      - CodeBuildServiceRole
      - Arn
  CloudformationIAMRole:
    Description: Cloudformation IAM Role
    Value:
      Fn::GetAtt:
      - CloudFormationExecutionRole
      - Arn
  CodePipelineIAMRole:
    Description: CodePipeline IAM Role
    Value:
      Fn::GetAtt:
      - CodePipelineExecutionRole
      - Arn
